generator client {
  provider = "prisma-client-js"
  // output = "./src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model migrations {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  executed_at DateTime? @default(now()) @db.Timestamp(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  id                            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                         String    @unique @db.VarChar(255)
  password_hash                 String    @db.VarChar(255)
  first_name                    String?   @db.VarChar(100)
  last_name                     String?   @db.VarChar(100)
  created_at                    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime? @default(now()) @db.Timestamptz(6)
  username                      String?   @db.VarChar(255)
  email_verified                Boolean?  @default(false)
  account_status                String?   @default("pending") @db.VarChar(50)
  last_login                    DateTime? @db.Timestamp(6)
  profile_picture_url           String?   @db.VarChar(255)
  verification_token            String?   @db.VarChar(255)
  verification_token_expires_at DateTime? @db.Timestamptz(6)
  reset_token                   String?   @db.VarChar(255)
  reset_token_expires_at        DateTime? @db.Timestamptz(6)
  oauth_provider                String?   @db.VarChar(20)
  oauth_id                      String?   @db.VarChar(255)

  @@index([account_status])
  @@index([email])
  @@index([username])
}

model parties {
  id          Int      @id @default(autoincrement())
  name        String
  date        DateTime
  location    String
  description String?
  guests      guests[]
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model guests {
  id         Int      @id @default(autoincrement())
  party_id   Int
  name       String
  email      String
  response   String?
  party      parties  @relation(fields: [party_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([party_id, email])
}
