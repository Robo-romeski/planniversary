generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  id                            String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                         String             @unique @db.VarChar(255)
  password_hash                 String             @db.VarChar(255)
  first_name                    String?            @db.VarChar(100)
  last_name                     String?            @db.VarChar(100)
  created_at                    DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime?          @default(now()) @db.Timestamptz(6)
  username                      String?            @unique @db.VarChar(50)
  email_verified                Boolean?           @default(false)
  verification_token            String?            @db.VarChar(255)
  verification_token_expires_at DateTime?          @db.Timestamptz(6)
  reset_token                   String?            @db.VarChar(255)
  reset_token_expires_at        DateTime?          @db.Timestamptz(6)
  last_login                    DateTime?          @db.Timestamptz(6)
  account_status                String?            @default("pending") @db.VarChar(20)
  profile_picture_url           String?
  oauth_provider                String?            @db.VarChar(20)
  oauth_id                      String?            @db.VarChar(255)
  user_preferences              user_preferences[]

  @@index([account_status])
  @@index([email])
  @@index([username])
}

model parties {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  date        DateTime  @db.Timestamp(6)
  location    String    @db.VarChar(255)
  description String?
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @updatedAt @db.Timestamp(6)
  guests      guests[]
}

model guests {
  id         Int       @id @default(autoincrement())
  party_id   Int?
  name       String    @db.VarChar(255)
  email      String    @db.VarChar(255)
  response   String?   @db.VarChar(20)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @updatedAt @db.Timestamp(6)
  party      parties?  @relation(fields: [party_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([party_id, email])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model user_preferences {
  id                      String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                 String   @db.Uuid
  default_location        String?  @db.VarChar(255)
  default_location_lat    Decimal? @db.Decimal(10, 8)
  default_location_lng    Decimal? @db.Decimal(11, 8)
  budget_preference       String?  @default("medium") @db.VarChar(50)
  custom_budget_min       Int?
  custom_budget_max       Int?
  theme_preference        String?  @db.VarChar(50)
  notification_preference String   @default("email") @db.VarChar(50)
  email_notifications     Boolean  @default(true)
  sms_notifications       Boolean  @default(false)
  created_at              DateTime @default(now()) @db.Timestamptz(6)
  updated_at              DateTime @default(now()) @db.Timestamptz(6)
  users                   users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "idx_user_preferences_user_id")
}
